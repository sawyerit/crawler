<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
		<section name="abot" type="Abot.Core.AbotConfigurationSectionHandler, Abot"/>
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
	</configSections>
	<log4net>
		<appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="[%date] [%thread] [%-5level] - %message%newline"/>
			</layout>
		</appender>
		<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="Logs\log.txt"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="5"/>
			<maximumFileSize value="5120KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="[%date] [%-3thread] [%-5level] - %message - [%logger]%newline"/>
			</layout>
		</appender>
		<appender name="SplunkAppender" type="log4net.Appender.RollingFileAppender">
			<file value="Logs\SplunkLog.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
      <maxSizeRollBackups value="5"/>
      <maximumFileSize value="5120KB"/>
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date{yyyyMMdd HH:mm:ss}, %message%newline"/>
			</layout>
		</appender>
		<appender name="ThroughputAppender" type="log4net.Appender.RollingFileAppender">
			<file value="Logs\ThroughputLog.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
      <maxSizeRollBackups value="5"/>
      <maximumFileSize value="5120KB"/>
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="[%date] [%-3thread] [%-5level] - %message - [%logger]%newline"/>
			</layout>
		</appender>
		<appender name="ProducerAppender" type="log4net.Appender.RollingFileAppender">
			<file value="Logs\ProducerLog.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="5" />
			<maximumFileSize value="5120KB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="[%date] [%-3thread] [%-5level] - %message - [%logger]%newline"/>
			</layout>
		</appender>
		<appender name="PersistenceAppender" type="log4net.Appender.RollingFileAppender">
			<file value="Logs\PersistenceLog.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="5" />
			<maximumFileSize value="5120KB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="[%date] [%-3thread] [%-5level] - %message - [%logger]%newline"/>
			</layout>
		</appender>
		<!-- 
		DEBUG
		INFO
		WARN
		ERROR -->
		<logger name="SplunkLogger" additivity="false">
			<level value="INFO" />
			<appender-ref ref="SplunkAppender" />
		</logger>
		<logger name="ThroughputLogger" additivity="false">
			<level value="INFO" />
			<appender-ref ref="ThroughputAppender" />
		</logger>
		<logger name="ProducerLogger" additivity="false">
			<level value="INFO" />
			<level value="DEBUG" />
			<appender-ref ref="ProducerAppender" />
		</logger>
		<logger name="PersistenceLogger" additivity="false">
			<level value="INFO" />
			<appender-ref ref="PersistenceAppender" />
		</logger>
		<root>
			<level value="ERROR"/>
			<appender-ref ref="ConsoleAppender"/>
			<appender-ref ref="RollingFileAppender"/>
		</root>
	</log4net>

	<abot>
		<crawlBehavior
      maxConcurrentThreads="1"
      maxPagesToCrawl="50"
      maxPagesToCrawlPerDomain="0"
      maxPageSizeInBytes="1048576"
      userAgentString="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; CrawlDaddy v0.3.0 abot v@ABOTASSEMBLYVERSION@ http://code.google.com/p/abot)"
      crawlTimeoutSeconds="30"
      downloadableContentTypes="text/html"
      isUriRecrawlingEnabled="false"
      isExternalPageCrawlingEnabled="false"
      isExternalPageLinksCrawlingEnabled="false"
      httpServicePointConnectionLimit="200"
      httpRequestTimeoutInSeconds="15"
      httpRequestMaxAutoRedirects="3"
      isHttpRequestAutoRedirectsEnabled="true"
      isHttpRequestAutomaticDecompressionEnabled="false"
      minAvailableMemoryRequiredInMb="0"
      maxMemoryUsageInMb="0"
      maxMemoryUsageCacheTimeInSeconds="0"
      maxCrawlDepth="1"
      isForcedLinkParsingEnabled="false"
      />
		<politeness
      isRespectRobotsDotTextEnabled="true"
      robotsDotTextUserAgentString="CrawlDaddy"
      maxRobotsDotTextCrawlDelayInSeconds="5"
      minCrawlDelayPerDomainMilliSeconds="0"/>
		<extensionValues>
			<add key="key1" value="value1"/>
			<add key="key2" value="value2"/>
		</extensionValues>
	</abot>

	<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
		<alias alias="IDomainProvider" type="CrawlDaddy.Core.IDomainProvider, CrawlDaddy.Core" />
		<alias alias="IPersistenceProvider" type="CrawlDaddy.Core.IPersistenceProvider, CrawlDaddy.Core" />
		<alias alias="IProcessorProvider" type="CrawlDaddy.Core.IProcessorProvider, CrawlDaddy.Core" />
		<alias alias="ICrawlProcessor" type="CrawlDaddy.Core.ICrawlProcessor, CrawlDaddy.Core" />
		<alias alias="ProcessorContext" type="CrawlDaddy.Core.Poco.ProcessorContext, CrawlDaddy.Core" />
		<alias alias="IBulkCrawler" type="CrawlDaddy.Core.IBulkCrawler, CrawlDaddy.Core" />
		<alias alias="IRateLimiter" type="Abot.Core.IRateLimiter, Abot" />
		<alias alias="IDomainConsumer" type="CrawlDaddy.Core.IDomainConsumer, CrawlDaddy.Core" />
		<alias alias="IDomainProducer" type="CrawlDaddy.Core.IDomainProducer, CrawlDaddy.Core" />
		<alias alias="IWebCrawlerFactory" type="CrawlDaddy.Core.IWebCrawlerFactory, CrawlDaddy.Core" />
		<alias alias="CrawlDaddyConfig" type="CrawlDaddy.Core.Poco.CrawlDaddyConfig, CrawlDaddy.Core" />
		<alias alias="SemList" type="CrawlDaddy.Plugin.Processor.SearchEngineMarketing.SemList, CrawlDaddy.Plugin" />
		<container>
			<!-- Processors -->
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.ParkedCrawlProcessor, CrawlDaddy.Plugin.BI" name="ParkedPage" />
      <!--<register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.ShoppingCartCrawlProcessor, CrawlDaddy.Plugin.BI" name="ShoppingCart" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.WebHostCrawlProcessor, CrawlDaddy.Plugin.BI" name="WebHost" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.SiteBuilderCrawlProcessor, CrawlDaddy.Plugin.BI" name="SiteBuilder" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.Processor.SearchEngineMarketing.SemKeywordCrawlProcessor, CrawlDaddy.Plugin" name="Verticals" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.Processor.SearchEngineVisibility.ConstantContactCrawlProcessor, CrawlDaddy.Plugin" name="ConstantContact" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.SocialLinkCrawlProcessor, CrawlDaddy.Plugin.BI" name="SocialLink" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.EmailHostCrawlProcessor, CrawlDaddy.Plugin.BI" name="EmailHost" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.DNSHostCrawlProcessor, CrawlDaddy.Plugin.BI" name="DNSHost" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.SSLCrawlProcessor, CrawlDaddy.Plugin.BI" name="SSL" />
      <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.HasCartCrawlProcessor, CrawlDaddy.Plugin.BI" name="HasCart" />
       <register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.HasLoginCrawlProcessor, CrawlDaddy.Plugin.BI" name="HasLogin" />
			<register type="ICrawlProcessor" mapTo="CrawlDaddy.Plugin.BI.Processors.PIIFormCrawlProcessor, CrawlDaddy.Plugin.BI" name="PIIForm" /> -->

			<!-- Domains Providers -->
			<!--<register type="IDomainProvider" mapTo="CrawlDaddy.Plugin.BI.Providers.BIApiDomainProvider, CrawlDaddy.Plugin.BI" />-->
			<register type="IDomainProvider" mapTo="CrawlDaddy.Plugin.Debug.CsvDomainProvider, CrawlDaddy.Plugin.Debug" />

			<!-- Persistence  Providers -->
			<register type="IPersistenceProvider" mapTo="CrawlDaddy.Plugin.BI.Providers.BIApiPersistenceProvider, CrawlDaddy.Plugin.BI" name="backupPersistenceProvider">
				<constructor />
				<!-- this is added so unity will use the empty constructor -->
			</register>
			<register type="IPersistenceProvider" mapTo="CrawlDaddy.Plugin.SplunkPersistenceProvider, CrawlDaddy.Plugin" name="primaryPersistenceProvider">
				<constructor />
			</register>
			<!--<register type="IPersistenceProvider" mapTo="CrawlDaddy.Plugin.FilePersistenceProvider, CrawlDaddy.Plugin" name="backupPersistenceProvider">
        <constructor />
      </register>-->

			<!-- Comsumers and Producers -->
			<!-- <register type="IDomainConsumer" mapTo="CrawlDaddy.Core.DomainConsumer, CrawlDaddy.Core" /> -->
			<register type="IDomainConsumer" mapTo="CrawlDaddy.Core.BIDomainConsumer, CrawlDaddy.Core" />
			<register type="IDomainProducer" mapTo="CrawlDaddy.Core.DomainProducer, CrawlDaddy.Core" />


			<register type="IWebCrawlerFactory" mapTo="CrawlDaddy.Plugin.AbotWebCrawlerFactory, CrawlDaddy.Plugin" />
			<register type="IProcessorProvider" mapTo="CrawlDaddy.Plugin.UnityProcessorProvider, CrawlDaddy.Plugin" />
			<register type="IBulkCrawler" mapTo="CrawlDaddy.Core.ProducerConsumerBulkCrawler, CrawlDaddy.Core" />
			<!--<register type="IBulkCrawler" mapTo="CrawlDaddy.Core.TaskBulkCrawler, CrawlDaddy.Core" />-->
			<register type="IRateLimiter" mapTo="CrawlDaddy.Core.CustomRateLimiter, CrawlDaddy.Core" />
			<register type="ProcessorContext">
				<lifetime type="singleton" />
				<property name="PrimaryPersistenceProvider" dependencyName="primaryPersistenceProvider" />
				<property name="BackupPersistenceProvider"  dependencyName="backupPersistenceProvider" />
			</register>
			<register type="CrawlDaddyConfig">
				<lifetime type="singleton" />
				<property name="MaxConcurrentCrawls" value="20" />
				<property name="MaxDomainRetrievalCount" value="100" />
				<property name="MinTimeBetweenDomainRetrievalRequestsInSecs" value="5" />
				<property name="MaxPageProcessorTimeInMilliSecs" value="30000" />
				<property name="MaxDomainProcessorTimeInMilliSecs" value="120000" />
				<property name="ConsumerThreadInstanceCheckInMillisecs" value="20000" />
				<property name="ConsumerThreadNoWorkToDoMax" value="4" />
				<property name="ConsumerThreadStepUp" value="5" />
				<property name="HttpStatusesToProcess">
					<array>
						<value value="200"></value>
					</array>
				</property>
				<property name="MimeTypesToProcess">
					<array>
						<value value="text/html"></value>
					</array>
				</property>

				<!-- StatsG Config -->
				<property name="StatsGEnabled" value="false" />
				<property name="StatsGPortConfigName" value="30303" />
				<property name="CrawlDaddyAuthIdForSEV" value="cc8a16a5-af2b-4f4d-93b2-005f48f389e7" />
				<property name="CrawlDaddyAppIdForSEV" value="7" />
				<!-- Dev -->
				<property name="StatsGHostConfigName" value="statsg.dev.int.searchenginevisibility.co" />
				<!-- Test -->
				<!--<property name="StatsGHostConfigName" value="statsg.test.int.searchenginevisibility.co" /> -->
				<!-- Prod -->
				<!--<property name="StatsGHostConfigName" value="statsg.int.searchenginevisibility.co" /> -->

        <property name="DomainCompleteAPI" value="http://bizintel-ws.intranet.gdg/bidata/api/common/domaincomplete" />
			</register>

			<register type="SemList" mapTo="CrawlDaddy.Plugin.Processor.SearchEngineMarketing.SemListFromFile, CrawlDaddy.Plugin">
				<lifetime type="singleton" />
			</register>
		</container>
	</unity>

	<!-- For easy fiddler debugging on the server -->
	<!--<system.net>
    <defaultProxy enabled="true">
      <proxy proxyaddress="http://127.0.0.1:8888" bypassonlocal="False"/>
    </defaultProxy>
  </system.net>-->
	<system.serviceModel>
		<bindings>
			<basicHttpBinding>
				<binding name="BasicHttpBinding_IBILoggerService" />
			</basicHttpBinding>
		</bindings>
		<client>
			<endpoint address="http://bizintel-ws.intranet.gdg/BILogger/BILoggerService.svc"
					binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IBILoggerService"
					contract="BILoggerService.IBILoggerService" name="BasicHttpBinding_IBILoggerService" />
		</client>
	</system.serviceModel>
</configuration>